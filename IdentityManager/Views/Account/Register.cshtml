@using IdentityManager.ViewModels
@model RegisterViewModel
@{
    ViewData["Title"] = "Register";
}

<h1>@ViewData["Title"].</h1>

<form asp-controller="Account" asp-action="Register" role="form" method="post" class="form-horizontal" asp-route-returnurl="@ViewData["ReturnUrl"]">
     <h4>Create a new account.</h4>
    <hr />
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <div class="col-md-10">
            <input asp-for="Email" class="form-control" placeholder="Email"/>
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            <input asp-for="Name" class="form-control" placeholder="Name"/>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            <input asp-for="Password" class="form-control" placeholder="Password"/>
            <span asp-validation-for="Password" class="text-danger"></span>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-10">
            <input asp-for="ConfirmPassword" class="form-control" placeholder="Confirm Password"/>
            <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
        </div>
    </div>
    <br />
    <div class="form-group">
        <div class="col-md-2">
            <button type="submit" class="btn btn-success form-control">Register</button>
        </div>
    </div>
</form>

@*
    In order for validations to work we need to 
    include the _ValidationScriptsPartial file for it to work
    on the client side
*@

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}